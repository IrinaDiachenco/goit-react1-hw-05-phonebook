{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ErrorMessage/ErrorMessage.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js","components/ErrorMessage/ErrorMessage.module.css","components/App/App.module.css"],"names":["module","exports","ErrorMessage","message","CSSTransition","appear","in","timeout","classNames","styles","unmountOnExit","className","errorMessage","ContactForm","state","name","phone","error","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","resetForm","isExistContact","contacts","find","contact","setTimeout","this","form","onSubmit","label","input","type","placeholder","onChange","button","errorStyles","Component","ContactListItem","onRemove","onClick","ContactList","length","TransitionGroup","component","list","map","Filter","filter","App","handleAddContact","newContact","prevState","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","container","tittle","defaultProps","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbfa959e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__1qgn7\",\"enterActive\":\"ContactList_enterActive__2GMIq\",\"exit\":\"ContactList_exit__Da8cO\",\"exitActive\":\"ContactList_exitActive__3-Ggt\",\"button\":\"ContactList_button__1iQqv\",\"list\":\"ContactList_list__TxjZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3EtFb\",\"label\":\"ContactForm_label__2Wqz8\",\"input\":\"ContactForm_input__IGymU\",\"button\":\"ContactForm_button__2aH6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1pPMQ\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ErrorMessage.module.css\";\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  return (\r\n    <CSSTransition\r\n      appear={true}\r\n      in={true}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.errorMessage}>\r\n        <p>{message}</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n//import { toast } from 'react-toastify';\r\n//import 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './ContactForm.module.css';\r\nimport errorStyles from '../ErrorMessage/ErrorMessage.module.css';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n      filter: PropTypes.string,\r\n    error: PropTypes.string,\r\n  };\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone: \"\",\r\n        error: null,\r\n    };\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidateForm = this.validateForm()\r\n\r\n        if (!isValidateForm)\r\n            onAdd({ id: uuidv4(), name, phone })\r\n            this.resetForm()    \r\n    };\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { contacts } = this.props\r\n        const isExistContact = !!contacts.find((contact) => contact.name === name);\r\n        if (!name || !phone) {\r\n            //alert('Some filed is empty')\r\n            this.setState({ error: 'Some filed is empty' });\r\n            return setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 2000);\r\n        }\r\n        if (isExistContact) {\r\n            //alert('Contact is already exist');\r\n            this.setState({ error: 'Contact is already exist' });\r\n            return setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 2000);\r\n        }\r\n    } \r\n\r\n    resetForm = () => {\r\n        this.setState({ name: '', phone: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, phone, error } = this.state;\r\n        //const { contacts } = this.props;\r\n        return (\r\n            <> \r\n            <form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n                <label className={styles.label}>name</label>\r\n                <input className={styles.input} type=\"text\" name=\"name\" placeholder=\"Enter name\" value={name} onChange={this.handleChangeForm} />\r\n                \r\n                <label className={styles.label}>phone</label>\r\n                <input className={styles.input} type=\"tel\" name=\"phone\" placeholder=\"Enter phone number\" value={phone} onChange={this.handleChangeForm} />\r\n                \r\n                <button className={styles.button} type='submit'>Add Contact</button>     \r\n                </form>\r\n            <CSSTransition\r\n            appear={true}\r\n            in={error !== null}\r\n            timeout={250}\r\n            classNames={errorStyles}\r\n            unmountOnExit   \r\n            >\r\n            <ErrorMessage message={error} />\r\n        </CSSTransition>\r\n           </>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n        name: PropTypes.string,\r\n        phone: PropTypes.number,\r\n        onCheckUnique: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return (\r\n        <li key={id}>\r\n            {name}: {phone} <button className={styles.button} id={id} onClick={() => onRemove(id)}>x</button>\r\n        </li>\r\n    \r\n    )\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove, id }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <TransitionGroup component=\"ul\" className={styles.list}>\r\n            {contacts.map(contacts => {\r\n                return (\r\n                    <CSSTransition\r\n                        key={id}\r\n                        classNames={styles}\r\n                        timeout={300}\r\n                        unmountOnExit\r\n                    >\r\n                        <ContactListItem {...contacts} onRemove={onRemove} />\r\n                    </CSSTransition>\r\n                );\r\n            })}\r\n        </TransitionGroup>\r\n    )\r\n};\r\nContactListItem.propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        phone: PropTypes.string.isRequired,\r\n        onRemove: PropTypes.func.isRequired,\r\n        contacts: PropTypes.array,\r\n};\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  const id = uuidv4();\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type='text'\r\n      name='filter'\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder='Enter name for Search'\r\n      id={id}\r\n    />\r\n  )\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\n//import PropTypes from 'prop-types';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './App.module.css';\n\nclass App extends Component {\n static defaultProps = {\n    name: '',\n    number: '',\n  };\n  state = {\n    contacts: [ ],\n    filter: '',\n  }\n\n  handleAddContact = (newContact) =>\n    this.setState(prevState => ({\n    contacts: [...prevState.contacts, newContact],\n  }))\n\n  handleRemoveContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id)\n      }\n    })\n  }\n  \n  handleFilterChange = (filter) => this.setState({ filter })\n  \n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n    componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState(() => {\n        return {\n          contacts: parsedContacts,\n        };\n      });\n    }  \n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={styles.container}>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames={styles}\n        timeout={500}\n        unmountOnExit\n        >\n        <h2 className={styles.tittle}>Phonebook</h2>\n      </CSSTransition>\n\n      <ContactForm onAdd={this.handleAddContact} contacts={this.state.contacts}/>\n      <div className={styles.filter}>\n        <h2>find contact</h2>\n      <Filter filter={filter} onChange={this.handleFilterChange} />\n        </div>\n      <ContactList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n  </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorMessage_errorMessage__3KKnJ\",\"appear\":\"ErrorMessage_appear__13qPs\",\"appearActive\":\"ErrorMessage_appearActive__2THfz\",\"exit\":\"ErrorMessage_exit__3iSxK\",\"exitActive\":\"ErrorMessage_exitActive__2Mv_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2YT3m\",\"tittle\":\"App_tittle__h1dP9\",\"appear\":\"App_appear__QuQ4_\",\"appearActive\":\"App_appearActive__2MQVp\",\"filter\":\"App_filter__2K-k6\"};"],"sourceRoot":""}